
import java.util.ArrayList;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author camyt
 */
public class frmDateCalculation extends javax.swing.JFrame {

    /**
     * Creates new form frmDateCalculation
     */
    public frmDateCalculation() {
        initComponents();
        setLocationRelativeTo(null);
        btnResult.setEnabled(false);
        txtMonth.setEditable(false);
        txtDay.setEditable(false);

    }

    public void habilitarBoton() {
        if (!txtYear.getText().isEmpty() && !txtMonth.getText().isEmpty() && !txtDay.getText().isEmpty()) {
            btnResult.setEnabled(true);
        } else {
            btnResult.setEnabled(false);
        }
        if (!txtYear.getText().isEmpty()) {
            txtDay.setEditable(true);
        }
        if (!txtDay.getText().isEmpty()) {
            txtMonth.setEditable(true);
        }

    }
    public void specialCharacter(java.awt.event.KeyEvent evento){
        if(evento.getKeyChar() >= 32 && evento.getKeyChar() <=47 
           || evento.getKeyChar() >=58 && evento.getKeyChar() <=64
           || evento.getKeyChar() >=91 && evento.getKeyChar() <=96 
           ||  evento.getKeyChar() >=123 && evento.getKeyChar() <=208){
            
           evento.consume();
           JOptionPane.showMessageDialog(this, "Special characters are not allowed");
        }
       
    }
    public boolean leapYear(){
        int specialYear = Integer.parseInt(txtYear.getText());
        if (( specialYear % 4 == 0) && ((specialYear % 100 != 0) || (specialYear % 400 == 0))){
            return true;
        }
        else 
            return false;
    }
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtYear = new javax.swing.JTextField();
        btnResult = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtMonth = new javax.swing.JTextField();
        txtDay = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        lblYear = new javax.swing.JLabel();
        lblDay = new javax.swing.JLabel();
        lblMonths = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        jLabel1.setText("Year: ");

        txtYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtYearActionPerformed(evt);
            }
        });
        txtYear.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtYearKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtYearKeyTyped(evt);
            }
        });

        btnResult.setFont(new java.awt.Font("Tahoma", 3, 13)); // NOI18N
        btnResult.setText("Calculate");
        btnResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResultActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        jLabel2.setText("Month:");

        txtMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMonthActionPerformed(evt);
            }
        });
        txtMonth.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMonthKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMonthKeyTyped(evt);
            }
        });

        txtDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDayActionPerformed(evt);
            }
        });
        txtDay.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDayKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDayKeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        jLabel3.setText("Day: ");

        lblYear.setText(">");

        lblDay.setText(">");

        lblMonths.setText(">");

        jLabel4.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        jLabel4.setText("CALCULATE DATE");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(jLabel1)
                                .addGap(28, 28, 28))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtYear, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(txtDay)
                            .addComponent(txtMonth))
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblYear, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                            .addComponent(lblDay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblMonths, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addComponent(btnResult, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(61, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel4)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblYear))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(lblDay))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(lblMonths))
                .addGap(27, 27, 27)
                .addComponent(btnResult, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtYearActionPerformed

        if (txtYear.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Enter a numeric value");
            txtYear.setText("");
            txtYear.requestFocus();
        }
        int year = Integer.parseInt(txtYear.getText());
        if (year > 2019) {
            JOptionPane.showMessageDialog(rootPane, "Invalid year, out of range");
            txtYear.setText("");
            txtYear.requestFocus();
        }
        //menor numero
        if (year < 1000) {
            JOptionPane.showMessageDialog(rootPane, "Error in number of digits (4 digits)");
            txtYear.setText("");
            txtYear.requestFocus();
        }
        if (year < 100 || year < 10) {
            JOptionPane.showMessageDialog(rootPane, "Error in number of digits (4 digits)");
            txtYear.setText("");
            txtYear.requestFocus();
        }
        


    }//GEN-LAST:event_txtYearActionPerformed

    private void txtYearKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtYearKeyTyped
        // YEAR
        specialCharacter(evt);
        char val = evt.getKeyChar();
        if (Character.isLetter(val)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Enter numerical values");
            txtYear.setText("");
            txtYear.requestFocus();   
        }
        if(txtYear.getText().length()>5){
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Incorrect number of digits");
            txtYear.setText("");
            txtYear.requestFocus();   
        }


    }//GEN-LAST:event_txtYearKeyTyped

    private void txtYearKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtYearKeyReleased
        // TODO add your handling code here:
        habilitarBoton();
       
    }//GEN-LAST:event_txtYearKeyReleased

    private void txtMonthKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMonthKeyReleased
        // TODO add your handling code here:
        habilitarBoton();
       
    }//GEN-LAST:event_txtMonthKeyReleased

    private void txtDayKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDayKeyReleased
        // TODO add your handling code here:
        habilitarBoton();
        
    }//GEN-LAST:event_txtDayKeyReleased

    private void txtMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMonthActionPerformed

        //MESES
        int day = Integer.parseInt(txtDay.getText());
        int month = Integer.parseInt(txtMonth.getText());
        
        if (txtMonth.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Enter a number");
            txtMonth.setText("");
            txtMonth.requestFocus();
        }
        if(month==4 || month==6 || month==9 || month==11){
            if(day==31){
                JOptionPane.showMessageDialog(rootPane, "Month not valid with the day");
                txtMonth.setText("");
                txtMonth.requestFocus(); 
            }
        }
        boolean valLeapYear = leapYear();
        if(month==2 && valLeapYear==false){
            if(day>28){
                JOptionPane.showMessageDialog(rootPane, "Invalid day for the month of February");
                txtMonth.setText("");
                txtMonth.requestFocus(); 
            }
        }
        else{
            if(day>29){
                JOptionPane.showMessageDialog(rootPane, "Invalid day for the month of February");
                txtMonth.setText("");
                txtMonth.requestFocus(); 
            }
        }
      
        if (month < 1 || month > 12) {
            JOptionPane.showMessageDialog(rootPane, "Incorrect month \n Enter new value ");
            txtMonth.setText("");
            txtMonth.requestFocus();
        }
        if(month == 0){
            JOptionPane.showMessageDialog(rootPane, "Incorrect month \n Enter new value");
            txtMonth.setText("");
            txtMonth.requestFocus();
        }
       
        
        
        
    }//GEN-LAST:event_txtMonthActionPerformed

    private void txtDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDayActionPerformed

        // DIA
        
        int day = Integer.parseInt(txtDay.getText());
        if (txtDay.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Enter a number");
            txtDay.setText("");
            txtDay.requestFocus();
        }
        if(day < 1){
            JOptionPane.showMessageDialog(rootPane, "Incorrect day \n Enter new value");
            txtDay.setText("");
            txtDay.requestFocus();
        }
        if(day > 31){
            JOptionPane.showMessageDialog(rootPane, "Incorrect day \n Enter new value");
            txtDay.setText("");
            txtDay.requestFocus();
        }
        if(day == 0){
            JOptionPane.showMessageDialog(rootPane, "Incorrect day \n Enter new value");
            txtDay.setText("");
            txtDay.requestFocus();   
        }

    }//GEN-LAST:event_txtDayActionPerformed

    private void txtDayKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDayKeyTyped
        // DIAS
        specialCharacter(evt);
        char val = evt.getKeyChar();
        if (Character.isLetter(val)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Enter numerical values");
            txtDay.setText("");
            txtDay.requestFocus();   
        }
        if(txtDay.getText().length()>3){
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Incorrect number of digits");
            txtDay.setText("");
            txtDay.requestFocus();   
        }
    }//GEN-LAST:event_txtDayKeyTyped

    private void txtMonthKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMonthKeyTyped
        // MESES
        specialCharacter(evt);
        char val = evt.getKeyChar();
        if (Character.isLetter(val)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Enter numerical values");
            txtMonth.setText("");
            txtMonth.requestFocus();   
        }
        if(txtMonth.getText().length()>2){
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Incorrect number of digits");
            txtMonth.setText("");
            txtMonth.requestFocus();   
        }
    }//GEN-LAST:event_txtMonthKeyTyped

    private void btnResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResultActionPerformed
        // CALCULAR
        
        String years = txtYear.getText();
        String days = txtDay.getText();
        String months = txtMonth.getText();
        String date = days+"/"+months+"/"+years;
        DateLibery dateLibery = new DateLibery();
        ArrayList<Integer> dates = new ArrayList<Integer>();
        dates = dateLibery.edad(date);
        String year= Integer.toString(dates.get(0));
        String mes = Integer.toString(dates.get(1));
        String dias = Integer.toString(dates.get(2));
        lblYear.setText(year);
        lblMonths.setText(mes);
        lblDay.setText(dias);
    }//GEN-LAST:event_btnResultActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmDateCalculation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmDateCalculation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmDateCalculation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmDateCalculation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmDateCalculation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnResult;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lblDay;
    private javax.swing.JLabel lblMonths;
    private javax.swing.JLabel lblYear;
    private javax.swing.JTextField txtDay;
    private javax.swing.JTextField txtMonth;
    private javax.swing.JTextField txtYear;
    // End of variables declaration//GEN-END:variables
}
